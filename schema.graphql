### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Date custom scalar type"""
scalar DateTime

"""Holds all relevant information about an event"""
type Event {
  """The description of the event"""
  Description: String!

  """The title of the event"""
  Title: String!

  """AI image generation tags"""
  ai_image_style_tags: [String!]!

  """The end date of the event"""
  end: DateTime!
  id: Int!

  """event keywords"""
  keywords: [String!]!

  """The location of the event"""
  location: Location

  """The start date of the event"""
  start: DateTime!
  users: [User]
}

"""Holds all relevant information about a location"""
type Location {
  id: Int!

  """The name of the location"""
  office: String!
}

type Mutation {
  EventJoin(eventId: Int!, userId: Int!): Event
  EventLeave(eventId: Int!, userId: Int!): Event
  LocationCreate(office: String!): Location
  LocationDelete(id: Int!): Location
  UserCreate(email: String!, name: String): User
  createEvent(arg: createEventArgs!): Event
  deleteEvent(id: Int!): Event
  updateEvent(data: createEventArgs!, id: Int!): Event
}

type Query {
  event(id: Int!): Event
  eventCreateDescription(id: Int!): String
  eventCreateImage(id: Int!): String
  events: [Event!]!
  location(id: Int!): Location
  locations: [Location]
  user(id: Int!): User
  users: [User!]!
}

"""Holds all relevant information about a user"""
type User {
  id: Int!
}

input createEventArgs {
  ai_image_keywords: [String!]!
  description: String!
  end: String!
  keywords: [String!]!
  location: Int
  office: String!
  start: String!
  title: String!
}